@functions {
    // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
    string CalcuClassify(string[] zoneNames, string classNamePrefix)
    {
        var zoneCounter = 0;
        var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
        return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
    }
}
@{
    /* Global includes for the theme
    ***************************************************************/

    //SetMeta(httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1");
    SetMeta(name: "viewport", content: "width=1040");
    <link href="http://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600|Arvo:700" rel="stylesheet" type="text/css" />
    <!--[if lte IE 8]><script src="@Url.Content("~/themes/mytheme/scripts/html5shiv.js")"></script><![endif]-->    
    Script.Include("jquery.min.js").AtHead();
    Script.Include("jquery.dropotron.min.js").AtHead();
    Script.Include("config.js").AtHead();
    Script.Include("skel.min.js").AtHead();
    Script.Include("skel-panels.min.js").AtHead();
    
@*<script src="@Url.Content("~/themes/mytheme/scripts/jquery.min.js")"></script>
	<script src="@Url.Content("~/themes/mytheme/scripts/jquery.dropotron.min.js")"></script>
	<script src="@Url.Content("~/themes/mytheme/scripts/config.js")"></script>
	<script src="@Url.Content("~/themes/mytheme/scripts/skel.min.js")"></script>
    <script src="@Url.Content("~/themes/mytheme/scripts/skel-panels.min.js")"></script>*@
    if (Request.Path.EndsWith("/first-gallery"))
    {
        using (Script.Head())
        {
            Script.Include("jquery.galleriffic.js").AtHead();
            Script.Include("first-gallery.js").AtHead();
        }
    }
    <noscript>
        <link rel="stylesheet" href="@Url.Content("~/themes/mytheme/css/skel-noscript.css")" />
        <link rel="stylesheet" href="@Url.Content("~/themes/mytheme/css/style.css")" />
        <link rel="stylesheet" href="@Url.Content("~/themes/mytheme/css/style-desktop.css")" />
    </noscript>

    /* Some useful shortcuts or settings
    ***************************************************************/

    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

    /* Layout classification based on filled zones
    ***************************************************************/

    //Add classes to the wrapper div to toggle aside widget zones on and off
    var asideClass = CalcuClassify(new[] { "AsideFirst", "AsideSecond" }, "aside-"); // for aside-1, aside-2 or aside-12 if any of the aside zones are filled
    if (HasText(asideClass))
    {
        Model.Classes.Add(asideClass);
    }

    //Add classes to the wrapper div to toggle tripel widget zones on and off
    var tripelClass = CalcuClassify(new[] { "TripelFirst", "TripelSecond", "TripelThird" }, "tripel-"); // for tripel-1, triple-2, etc. if any of the tripel zones are filled
    if (HasText(tripelClass))
    {
        Model.Classes.Add(tripelClass);
    }

    //Add classes to the wrapper div to toggle quad widget zones on and off
    var footerQuadClass = CalcuClassify(new[] { "FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth" }, "split-"); // for quad-1, quad-2, etc. if any of the quad zones are filled
    if (HasText(footerQuadClass))
    {
        Model.Classes.Add(footerQuadClass);
    }

    /* Inserting some ad hoc shapes
    ***************************************************************/

    WorkContext.Layout.Header.Add(New.Branding(), "5"); // Site name and link to the home page
    //WorkContext.Layout.Footer.Add(New.BadgeOfHonor(), "5"); // Powered by Orchard
    WorkContext.Layout.Footer.Add(New.User(), "10"); // Login and dashboard links
}

@if (Model.Header != null)
{    
    <!-- Header Wrapper -->
    <div id="header-wrapper">
        <!-- Header -->
        <div id="header" class="container">
            @Zone(Model.Header)

            @if (Model.Navigation != null)
            {
                @Zone(Model.Navigation)
            }
        </div>
    </div>
}

@if (Model.Featured != null)
{
    <div id="layout-featured" class="group">
        @Zone(Model.Featured)
    </div>
}
@if (Model.BeforeMain != null)
{
    <div id="layout-before-main" class="group">
        @Zone(Model.BeforeMain)
    </div>
}

<div id="main-wrapper">
    <div id="main" class="container">
        <div class="row">
            <div id="content" class="8u">
                @if (Model.Messages != null)
                {
                    <div id="messages">
                        @Zone(Model.Messages)
                    </div>
                }
                @if (Model.BeforeContent != null)
                {
                    <div id="before-content">
                        @Zone(Model.BeforeContent)
                    </div>
                }
                @if (Model.Content != null)
                {                
                    @Zone(Model.Content)                
                }
                @if (Model.AfterContent != null)
                {
                    <div id="after-content">
                        @Zone(Model.AfterContent)
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (Model.AfterMain != null)
{
    <div id="layout-after-main" class="group">
        @Zone(Model.AfterMain)
    </div>
}

<div id="footer-wrapper">
    @if (Model.Footer != null)
    {
        <div id="footer" class="container">
            @Zone(Model.Footer)
        </div>
    }
    <div id="copyright" class="container">
        <ul class="links">
            <li>© Untitled. All rights reserved</li>
            <li>Demo images: <a href="http://regularjane.deviantart.com/">regularjane</a></li>
            <li>Design: <a href="http://html5up.net/">HTML5 UP</a></li>
        </ul>
    </div>
</div>
